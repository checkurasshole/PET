-- Core Module for COMB0_WICK
-- All game manipulation logic

local Module = {}

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local MarketplaceService = game:GetService("MarketplaceService")
local LocalPlayer = Players.LocalPlayer

-- Internal state
local coinHookEnabled = false
local dinosaurPurchaseBypassEnabled = false
local gamepassBypassEnabled = false
local customCoinAmount = 10000
local unlockedGamepasses = {}
local dinosaurHooksActive = false

-- Remote hook system
local function setupRemoteHooks()
    task.spawn(function()
        pcall(function()
            local mt = getrawmetatable(game)
            local oldNamecall = mt.__namecall
            setreadonly(mt, false)
            
            mt.__namecall = newcclosure(function(self, ...)
                local method = getnamecallmethod()
                local args = {...}
                
                if method == "FireServer" or method == "InvokeServer" then
                    local remotePath = self:GetFullName()
                    local remoteName = self.Name:lower()
                end
                
                -- Let everything through normally
                return oldNamecall(self, ...)
            end)
            
            setreadonly(mt, true)
        end)
    end)
end

-- Coin manipulation
local function hookCoins()
    task.spawn(function()
        pcall(function()
            local playerAtomPath = ReplicatedStorage:WaitForChild("TS", 10):WaitForChild("atoms", 10):WaitForChild("player-atom", 10):WaitForChild("data-atom", 10)
            local playerAtom = require(playerAtomPath)
            
            if playerAtom and playerAtom.PlayerDataAtom then
                local originalGetCoins = playerAtom.PlayerDataAtom.getPlayerCoins
                
                playerAtom.PlayerDataAtom.getPlayerCoins = function(...)
                    if coinHookEnabled then
                        return customCoinAmount
                    end
                    return originalGetCoins(...)
                end
            end
        end)
    end)
end

-- Dinosaur ownership manipulation
local function hookDinosaurPurchases()
    if dinosaurHooksActive then
        return
    end
    
    dinosaurHooksActive = true
    
    task.spawn(function()
        pcall(function()
            local playerAtomPath = ReplicatedStorage:WaitForChild("TS", 10):WaitForChild("atoms", 10):WaitForChild("player-atom", 10):WaitForChild("data-atom", 10)
            local playerAtom = require(playerAtomPath)
            
            if playerAtom and playerAtom.PlayerDataAtom then
                local originalOwns = playerAtom.PlayerDataAtom.doesPlayerOwnDinosaur
                
                playerAtom.PlayerDataAtom.doesPlayerOwnDinosaur = function(...)
                    if dinosaurPurchaseBypassEnabled then
                        return true
                    end
                    return originalOwns(...)
                end
            end
        end)
    end)
    
    setupRemoteHooks()
end

-- Gamepass manipulation
local function hookGamepasses()
    task.spawn(function()
        pcall(function()
            local gamepassCachePath = ReplicatedStorage:WaitForChild("TS", 10):WaitForChild("utility", 10):WaitForChild("gamepass-cache", 10)
            local gamepassCache = require(gamepassCachePath)
            
            if gamepassCache and gamepassCache.ownsGamepass then
                local originalOwnsGamepass = gamepassCache.ownsGamepass
                
                gamepassCache.ownsGamepass = function(self, gamepassId)
                    if gamepassBypassEnabled or unlockedGamepasses[gamepassId] then
                        return true
                    end
                    return originalOwnsGamepass(self, gamepassId)
                end
            end
            
            local oldUserOwnsGamePass = MarketplaceService.UserOwnsGamePassAsync
            
            MarketplaceService.UserOwnsGamePassAsync = function(self, userId, gamepassId)
                if userId == LocalPlayer.UserId then
                    if gamepassBypassEnabled or unlockedGamepasses[gamepassId] then
                        return true
                    end
                end
                return oldUserOwnsGamePass(self, userId, gamepassId)
            end
        end)
    end)
end

-- Public API
function Module:Init()
    task.spawn(function()
        task.wait(2)
        hookCoins()
        hookGamepasses()
    end)
end

function Module:SetCoinAmount(amount)
    customCoinAmount = amount
end

function Module:GetCoinAmount()
    return customCoinAmount
end

function Module:ToggleCoins(state)
    coinHookEnabled = state
end

function Module:ToggleDinosaurBypass(state)
    if state then
        hookDinosaurPurchases()
    end
    dinosaurPurchaseBypassEnabled = state
end

function Module:UnlockAllDinosaurs()
    hookDinosaurPurchases()
    
    task.spawn(function()
        pcall(function()
            local playerAtomPath = ReplicatedStorage:WaitForChild("TS", 10):WaitForChild("atoms", 10):WaitForChild("player-atom", 10):WaitForChild("data-atom", 10)
            local playerAtom = require(playerAtomPath)
            
            if playerAtom and playerAtom.PlayerDataAtom then
                playerAtom.PlayerDataAtom.doesPlayerOwnDinosaur = function(...)
                    return true
                end
                
                local originalGetData = playerAtom.PlayerDataAtom.getDinosaurData
                playerAtom.PlayerDataAtom.getDinosaurData = function(player, dinoId)
                    local originalData = originalGetData(player, dinoId)
                    if originalData then
                        return originalData
                    end
                    return {
                        Kills = 0,
                        Skins = {}
                    }
                end
            end
        end)
    end)
end

function Module:ToggleAllGamepasses(state)
    gamepassBypassEnabled = state
end

function Module:ToggleGamepass(gamepassId, state)
    if state then
        unlockedGamepasses[gamepassId] = true
        pcall(function()
            for _, connection in pairs(getconnections(MarketplaceService.PromptGamePassPurchaseFinished)) do
                connection:Fire(LocalPlayer, gamepassId, true)
            end
        end)
    else
        unlockedGamepasses[gamepassId] = nil
    end
end

return Module
